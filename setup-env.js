#!/usr/bin/env node

const fs = require('fs');
const readline = require('readline');

// Interactive environment setup script
const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

console.log('üîß Sapphire Modbot Environment Setup');
console.log('=====================================\n');

const questions = [
    {
        key: 'DISCORD_TOKEN',
        question: 'ü§ñ Enter your Discord Bot Token: ',
        required: true
    },
    {
        key: 'CLIENT_ID', 
        question: 'üÜî Enter your Discord Client ID: ',
        default: '1358527215020544222'
    },
    {
        key: 'GUILD_ID',
        question: 'üè† Enter your Discord Server/Guild ID (leave empty for global commands): ',
        required: false
    }
];

let envVars = {};

async function askQuestion(q) {
    return new Promise((resolve) => {
        const prompt = q.default ? `${q.question}(${q.default}) ` : q.question;
        rl.question(prompt, (answer) => {
            const value = answer.trim() || q.default || '';
            if (q.required && !value) {
                console.log('‚ùå This field is required. Please try again.\n');
                askQuestion(q).then(resolve);
            } else {
                resolve(value);
            }
        });
    });
}

async function setup() {
    try {
        for (const q of questions) {
            const answer = await askQuestion(q);
            if (answer) {
                envVars[q.key] = answer;
            }
        }

        // Create .env file
        let envContent = '# Sapphire Modbot Environment Configuration\n';
        envContent += '# Generated by setup-env.js\n\n';
        
        for (const [key, value] of Object.entries(envVars)) {
            envContent += `${key}=${value}\n`;
        }
        
        // Add additional optional variables
        envContent += '\n# Optional Configuration\n';
        envContent += 'NODE_ENV=development\n';
        envContent += 'MAX_MEMORY=400\n';
        envContent += 'LOG_LEVEL=info\n';

        fs.writeFileSync('.env', envContent);
        
        console.log('\n‚úÖ Environment file created successfully!');
        console.log('üìÅ Created: .env');
        
        if (envVars.GUILD_ID) {
            console.log(`üöÄ Ready to deploy commands to guild: ${envVars.GUILD_ID}`);
        } else {
            console.log('üåç Ready to deploy commands globally');
        }
        
        console.log('\nüéØ Next steps:');
        console.log('1. Run: node deploy-all-commands.js');
        console.log('2. Run: npm run bot');
        console.log('3. Test commands in Discord\n');
        
    } catch (error) {
        console.error('‚ùå Setup failed:', error.message);
    }
    
    rl.close();
}

setup();
