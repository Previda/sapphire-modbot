name: Raspberry Pi Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run syntax check
      run: node -c index.js
    
    - name: Check required files
      run: |
        test -f index.js
        test -f package.json
        test -d src/commands
        test -d src/events
    
    - name: Test Discord.js compatibility
      run: node -e "const { Client } = require('discord.js'); console.log('Discord.js test passed');"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Raspberry Pi
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.PI_HOST }}
        username: ${{ secrets.PI_USER }}
        key: ${{ secrets.PI_SSH_KEY }}
        port: 22
        timeout: 30s
        command_timeout: 10m
        script: |
          echo "üöÄ Starting automated deployment..."
          
          # Get current user for flexible paths
          CURRENT_USER=$(whoami)
          BOT_DIR="/home/$CURRENT_USER/sapphire-bot"
          
          # Check if bot directory exists
          if [ ! -d "$BOT_DIR" ]; then
            echo "üì• Bot not installed yet, running fresh installation..."
            curl -sSL https://raw.githubusercontent.com/Previda/sapphire-modbot/main/scripts/pi-auto-update.sh | bash -s install
          else
            echo "üîÑ Bot found, running update..."
            cd "$BOT_DIR"
            if [ -f "scripts/pi-auto-update.sh" ]; then
              bash scripts/pi-auto-update.sh update
            else
              echo "‚ùå Auto-update script not found, manual deployment needed"
              exit 1
            fi
          fi
          
          echo "‚úÖ Deployment completed successfully"
